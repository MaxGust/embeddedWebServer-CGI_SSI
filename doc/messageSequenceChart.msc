msc {

HTTP_SERVER,HTTP_NET,HTTP_REQUEST_PARSER,HTTP_CGI,HTTP_RESPONSE,HTTP_FILE,HTTP_SSI;

HTTP_SERVER=>HTTP_NET [label="read client request"];
HTTP_NET>>HTTP_SERVER [label="client reqest"];
HTTP_SERVER => HTTP_REQUEST_PARSER [label="parse client request"];
HTTP_REQUEST_PARSER >> HTTP_SERVER [label= "parsed client request"];

HTTP_SERVER alt HTTP_RESPONSE [label="request class-CGI",linecolor="green"]{
HTTP_SERVER => HTTP_CGI [label="perform op and get response strings"];
HTTP_CGI >> HTTP_SERVER [label="response strings"];
HTTP_SERVER=>HTTP_RESPONSE [label="form response header"];
HTTP_RESPONSE >> HTTP_SERVER [label="response header"];
HTTP_SERVER => HTTP_NET [label="write response to network"];
HTTP_SERVER => HTTP_NET [label="close connection"];
};


HTTP_SERVER alt HTTP_FILE [label="request class-none",linecolor="blue"]{
HTTP_SERVER=>HTTP_FILE [label="read file contents"];
HTTP_FILE >> HTTP_SERVER [label="file contents"];
HTTP_SERVER => HTTP_RESPONSE [label="form response header"];
HTTP_RESPONSE >> HTTP_SERVER [label="response header"];
HTTP_SERVER => HTTP_NET [label="write response to network"];
HTTP_SERVER => HTTP_NET [label="close connection"];
};

HTTP_SERVER alt HTTP_SSI [label="request class-SSI",linecolor="orange"]{
HTTP_SERVER=>HTTP_FILE [label="read file contents"];
HTTP_FILE >> HTTP_SERVER [label="file contents"];
HTTP_SERVER => HTTP_SSI [label="get replacement strings"];
HTTP_SSI >> HTTP_SERVER [label="replacement strings"];
HTTP_SERVER => HTTP_SERVER [label="perform replacements"];
HTTP_SERVER => HTTP_RESPONSE [label="form response header"];
HTTP_RESPONSE >> HTTP_SERVER [label="response header"];
HTTP_SERVER => HTTP_NET [label="write response to network"];
HTTP_SERVER => HTTP_NET [label="close connection"];
};

}
